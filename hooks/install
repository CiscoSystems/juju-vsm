#!/bin/bash

source ./hooks/lib/common.sh

set -e

function add_havana_apt_repo
{
     juju-log "Install python-software-properties"
     sudo sudo apt-get install -y python-software-properties
     juju-log "Installing python-software-properties done"

     juju-log "Install add-apt-repo cloud-archive:havana"
     sudo add-apt-repository -y cloud-archive:havana
     juju-log "Installing add-apt-repo cloud-archive:havana done"

     juju-log "Install add-apt-repo cloud-archive:havana"
     sudo apt-get update
     juju-log "apt-get update done"
}

#Install the dependency packages
function install_vsm_dependency_packages
{
    local kernel_release kernel_hdr_pkg

    juju-log "Starting with installation of vsm dependency packages"

    #Install the kernel_hdr_pkg based on the kernel version
    kernel_release=`uname -r`
    juju-log "kernel_release is ${kernel_release}"
    kernel_hdr_pkg="linux-headers-${kernel_release}"
    juju-log "kernel_hdr_pkg is ${kernel_hdr_pkg}"

    sudo apt-get install -y ${kernel_hdr_pkg}

    #Install the kvm package
    juju-log "Install the kvm package"
    sudo apt-get install -y kvm

    #Install the libvirt-bin package
    #juju-log "Install the libvirt-bin package"
    sudo apt-get install -y libvirt-bin

    #Install the virtinst package
    #juju-log "Install the virtinst package"
    sudo apt-get install -y virtinst

    #Install the genisoimage package
    juju-log "Install the kvm package"
    sudo apt-get install -y genisoimage

    #Install the python-cheetah package
    juju-log "Install the python-cheetah package"
    sudo apt-get install -y python-cheetah
}

#Remove and disable auto start for virsh network
function virsh_remove_network
{
    local virsh_net virsh_auto ebt

    juju-log "check virsh network"

    set +e
    if [ ! -x /usr/bin/virsh ]; then
        juju-log "Virsh is not installed"
        set -e
        return 1
    fi

    # Remove virsh network
    virsh_net=$(/usr/bin/virsh net-info default | grep -c 'Active: .* no')
    juju-log "virsh_net is ${virsh_net}"
    if [ ${virsh_net} -eq 0 ]; then
        juju-log "remove the virsh network"
        /usr/bin/virsh net-destroy default
    fi

    # Disable the virsh autostart
    virsh_auto=$(/usr/bin/virsh net-info default | grep -c 'Autostart: .* no')
    juju-log "virsh_auto is ${virsh_auto}"
    if [ ${virsh_auto} -eq 0 ]; then
        juju-log "disable the virsh net-autostart"
        /usr/bin/virsh net-autostart --disable default
    fi

    ebt=$(apt-cache policy ebtables | grep -c "Installed: (none)")
    if [ $ebt -eq 0 ]; then
        juju-log "purge the ebtables"
        aptitude -y purge ebtables
    fi
    set -e
    juju-log "virsh configured"
}

#Install the OVS components
function install_ovs_components
{
    local ovs kernel_release

    juju-log "check if ovs is installed"
    ovs=`apt-cache policy openvswitch-switch openvswitch-datapath-source openvswitch-datapath-dkms | grep -c "Installed: (none)"`
    if [ $ovs -eq 0 ]; then
        juju-log "ovs is already installed"
        return 0
    fi

    #Install the ovs components and all dependency packages
    juju-log "Install the OVS components [openvswitch switch & datapath source & dkms]"
    sudo apt-get install -y openvswitch-switch openvswitch-datapath-source openvswitch-datapath-dkms

    #check and install the openvswitch-data for the kernel version
    juju-log "Install openvswitch-data based on kernel version"
    kernel_release=`uname -r`
#    sudo apt-get install -y openvswitch-datapath-module-${kernel_release}

    set +e
    datapath=`/usr/bin/dpkg -s openvswitch-datapath-module-${kernel_release} | grep -c '^Status: install ok installed'`
    if [ $datapath -eq 0 ]; then
        module-assistant prepare
        /usr/bin/module-assistant --text-mode auto-install openvswitch-datapath
    fi
    set -e

    juju-log "Done with installation of ovs components"
}

#Start the install hook
add_havana_apt_repo
install_vsm_dependency_packages
virsh_remove_network
install_ovs_components

#Create the vsm directory in /var/spool
if [ ! -d ${VSM_VM_DIR} ]; then
    juju-log "Create the ${VSM_VM_DIR} directory"
    mkdir -p ${VSM_VM_DIR}
fi
