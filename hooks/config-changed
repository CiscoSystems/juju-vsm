#!/bin/bash
# config-changed occurs 
# 1- after install hook when deploying the charm
# 2- everytime a new configuration value is updated (juju set)


ovsbridge=$(config-get ovsbridge)
physicalinterfaceforovs=$(config-get physicalinterfaceforovs)
vsmname=$(config-get n1k-vsm-name)
consolepts=$(config-get n1k-vsm-console-pts)
isoimage=$(config-get isoimage)
vsmrole=$(config-get n1k-vsm-role)
domainid=$(config-get n1k-vsm-domainid)
adminpasswd=$(config-get n1k-vsm-password)
mgmtip=$(config-get n1k-vsm-mgmt-ip)
mgmtnetmask=$(config-get n1k-vsm-mgmt-netmask)
mgmtgateway=$(config-get n1k-vsm-mgmt-gateway)
ctrlinterface=$(config-get n1k-vsm-ctrl-interface)
ctrlmac=$(config-get n1k-vsm-ctrlmac)
mgmtinterface=$(config-get n1k-vsm-mgmt-interface)
mgmtmac=$(config-get n1k-vsm-mgmtmac)
pktinterface=$(config-get n1k-vsm-pktinterface)
pktmac=$(config-get n1k-vsm-pktmac)
memory=$(config-get n1k-vsm-vm-memory)
vcpu=$(config-get n1k-vsm-vm-vcpu)
disksize=$(config-get n1k-vsm-vm-disksize)

finaliso=/var/spool/vsm/${vsmrole}_repacked.iso
diskfile=/var/spool/vsm/${vsmrole}_disk
#isofile=/opt/cisco/iso/${isoimage}
isofilepath=/opt/cisco/iso/

export physicalinterfaceforovs ovsbridge
export nodeip nodenetmask nodegateway nodedns
export isoimage diskfile disksize consolepts isofilepath isofile finaliso
export domainid vsmname mgmtip mgmtnetmask mgmtgateway adminpasswd vsmrole
export ctrlinterface ctrlmac mgmtinterface mgmtmac pktinterface pktmac memory vcpu

#start the openvswitch
function start_openvswitch {
    juju-log "Start the openvswitch process"
    /usr/sbin/service openvswitch-switch start

    reload_kmod=`/usr/sbin/service openvswitch-switch status | /bin/grep -c 'ovs-brcompatd is not running'`
    if [ $reload_kmod -eq 1 ]; then
      juju-log "Force reload the new openvswitch kernel module"
      /etc/init.d/openvswitch-switch force-reload-kmod
    fi

    juju-log "Add the ovs bridge"
    /usr/bin/ovs-vsctl -- --may-exist add-br $ovsbridge
    /usr/bin/ovs-vsctl -- --may-exist add-port $ovsbridge $physicalinterfaceforovs
    /sbin/brctl delif br0 $physicalinterfaceforovs
    ifconfig br0 0.0.0.0 0.0.0.0
    /usr/sbin/service openvswitch-switch restart

}

#Move the phsical interface to ovs bridge
function update_ovs_interfaces {
    juju-log "Move the physical interface to ovs bridge and restart network"

    juju-log "using eth-config.tmpl to create eth-config"
    cheetah fill --env --oext compiled templates/eth-config.tmpl
    juju-log "copy the compiled template to /etc/network/"
    #cp templates/eth-config.compiled /etc/network/${physicalinterfaceforovs}.config
    cp templates/eth-config.compiled /etc/network/interfaces

    juju-log "unset the ip address for physical interface"
    ifconfig ${physicalinterfaceforovs} 0.0.0.0 0.0.0.0

    juju-log "restart the networking service"
    /etc/init.d/networking restart
}

#Find the name of nexus vsm iso
function get_vsm_iso_filename {
    juju-log "Determine the file of nexus vsm iso in /opt/cisco/iso"
    files=( ${isofilepath}*.iso )
    for file in "${files[@]}"
    do
        isofile="${file}"
        juju-log "isofile is $isofile"
        break
    done
}

#Repack the nexus 1k iso
function repack_iso {
    juju-log "Repack the VSM ISO with the setup script enviornment variables"
    pwd
    ./hooks/lib/repackiso.py -i $isofile -d $domainid -n $vsmname -m $mgmtip -s $mgmtnetmask -g $mgmtgateway -p $adminpasswd -r $vsmrole -f $finaliso
}

#Generate the vsm vm xml file
function generate_vsm_vm_xml {
    juju-log "Complie the vsm_vsm.xml from the template"
    cheetah fill --env --oext compiled templates/vsm_vm.xml.tmpl
    cp templates/vsm_vm.xml.compiled /var/spool/vsm/vsm_vm.xml
    juju-log "vsm_vm.xml creation done" 
}

function add_repo {
    # remove old repos
    rm -f /etc/apt/sources.list.d/springfield-ppa.list

    # get the source from input config.
    source=$(config-get n1kv-source)
    if [ "$source" == "distro" ]; then
        exit 1
    fi

    arr_source=($source)
    if [ ${arr_source[0]} = 'deb' ];then
        key=`cut -d "|" -f 2 <<< "$source"`
        deb_sources=`cut -d "|" -f 1 <<< "$source"`
        No_repos=`awk -F',' '{ print NF }' <<<"$deb_sources"`
        i=1
        while [ "$No_repos" -ne "0" ]; do
            deb_source=`cut -d "," -f $i <<< "$deb_sources"`
            echo $deb_source >> /etc/apt/sources.list.d/springfield-ppa.list
            i=$((i + 1))
            No_repos=$((No_repos - 1))
        done

        apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys $key
    fi

}

function download_vsm_iso_from_ppa {
    juju-log "Do apt-get update"
    apt-get update
    juju-log "Download the nexus-1000v-iso"
    apt-get install nexus-1000v-iso
    get_vsm_iso_filename
}

function qemu_img_create {
    juju-log "Check and create the qemu-img"
    vsm_running=`/usr/bin/virsh list | grep -c ' $vsmname .* running'`

    if [ $vsm_running -eq 0 ]; then
      /usr/bin/qemu-img create -f raw $diskfile ${disksize}G
      juju-log "qemu-img create done"
    fi
}

vsm_running=`/usr/bin/virsh list | grep -c ' $vsmname .* running'`
if [ $vsm_running -eq 0 ]; then
    add_repo
    download_vsm_iso_from_ppa
    start_openvswitch
    update_ovs_interfaces
    repack_iso
    generate_vsm_vm_xml
    qemu_img_create
fi

hooks/dvs-relation-joined
